{"version":3,"sources":["components/Form/Input/index.js","components/Form/Input/Input.js","components/Form/Button/index.js","components/Form/Button/Button.js","components/SignIn/index.js","components/SignIn/SignIn.js","components/Aside/index.js","components/Aside/Aside.js","action/Action.js","const/ConstUrl.js","components/Help/HelpGeneral/index.js","components/Help/HelpGeneral/HelpGeneral.js","components/Modal/Help/index.js","components/Modal/Help/EditCat.js","components/Help/Help.js","components/Help/AddHelp/AddHelp.js","components/Help/AddHelp/index.js","components/Blog/index.js","components/Blog/Blog.js","components/Meal/index.js","components/Meal/Meal.js","components/Tabs/index.js","components/Tabs/Tabs.js","components/Dashboard/index.js","components/Dashboard/Dashboard.js","App.js"],"names":["Input","props","type","name","placeholder","className","classNames","value","onChange","e","Button","onClick","undefined","SignIn","connect","state","help","helpReducer","getCategories","useState","mail","setMails","password","setPassword","isSuccess","setIsSuccess","to","pathname","process","_id","onSubmit","preventDefault","target","Aside","getCategoriesHelpCenter","url","dispatch","All","fetch","method","headers","then","response","json","catch","error","data","postCategoriesHelpCenter","body","isPatch","JSON","stringify","postCategories","patchOrderHelpCenter","patchOrder","BASEPATH","HELPCENTERCATGURL","HelpGeneral","deleteQuestHelp","deleteQuestions","deleteQuestionsHelpCenter","postQuest","patchOrderHelp","id","isOpen","setId","edit","isEdit","isActive","order","setOrder","orderValue","setOrderValue","title","setTitle","answer","setAnswer","item","questions","map","index","key","sendObj","newIndex","changeOrderQuestion","label","split","join","toLowerCase","answere","editQuest","deleteQuest","query","EditCat","helpPOST","patchCategories","categoryValue","setCategoryValue","success","errorMessage","setErrorMessage","useEffect","error_code","message","closeCat","handleSubmit","require","helpGET","helpORDER","helpDELETECAT","deleteCategories","helpDELETEQUEST","getCategoriesHelp","deleteCategoriesHelp","deleteCategoriesHelpCenter","isAdd","setIsAdd","catId","setCatId","isOpenModal","setIsOpenModal","setValue","activeClassName","orderIndex","match","params","_","AddHelp","helpPost","postCategoriesHelp","titleLabel","setTitleLabel","question","setQuestion","questionLabel","setQuestionLabel","location","isEmpty","Blog","Meal","Tabs","path","component","Help","Dashboard","exact"],"mappings":"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","file":"static/js/2.45ecb308.chunk.js","sourcesContent":["import Input from \"./Input\";\r\n\r\nexport default Input","import React from 'react'\r\nimport './Input.scss'\r\nimport classNames from 'classnames'\r\n\r\nconst Input = props => {\r\n\r\n    return (\r\n        <input\r\n            type={props.type}\r\n            name={props.name}\r\n            placeholder={props.placeholder}\r\n            className={classNames('input', props.className)}\r\n            value={props.value}\r\n            onChange={e => props.onChange(e)} />\r\n    )\r\n}\r\n\r\nexport default Input","import Button from './Button'\r\n\r\nexport default Button","import React from 'react'\r\nimport classNames from 'classnames'\r\nimport './Button.scss'\r\n\r\nconst Button = props => {\r\n\r\n    return (\r\n        <button onClick={e => props.onClick !== undefined && props.onClick(e)} className={classNames('button', props.className)}>{props.value}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import SignIn from './SignIn'\r\n\r\nexport default SignIn","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Input } from '../Form'\r\nimport './SignIn.scss'\r\n\r\nconst SignIn = props => {\r\n    const [mail, setMails] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (password !== '' && mail !== '') {\r\n            setIsSuccess(true)\r\n        }\r\n    }\r\n\r\n    if (isSuccess) {\r\n        return (\r\n            <Redirect to={{\r\n                pathname: `${process.env.PUBLIC_URL}/dashboard/help/${props.help[0]._id}`\r\n            }} />\r\n        )\r\n    }\r\n    return (\r\n        <section className=\"SignIn\">\r\n            <div className=\"SignIn-Cont\">\r\n                <h1>Sign In</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Input\r\n                        type='text'\r\n                        name='mail'\r\n                        placeholder='E-mail'\r\n                        value={mail}\r\n                        onChange={e => setMails(e.target.value)}\r\n                    />\r\n                    <Input\r\n                        type='password'\r\n                        name='password'\r\n                        placeholder='Password'\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    />\r\n                    <Input\r\n                        type='submit'\r\n                        className=\"Submit\"\r\n                        value='LOGIN'\r\n                    />\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        help: state.helpReducer.getCategories\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SignIn)","import Aside from './Aside'\r\n\r\nexport default Aside","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport './Aside.scss'\r\n\r\nconst Aside = props => {\r\n    return (\r\n        <section className='Aside'>\r\n            <div className='Aside-Cont'>\r\n                <ul>\r\n                    <NavLink to={{\r\n                        pathname: `${process.env.PUBLIC_URL}/dashboard/help/${props.help[0]._id}`\r\n                    }}>\r\n                        <li>Help</li>\r\n                    </NavLink>\r\n                    <NavLink to={{\r\n                        pathname: `${process.env.PUBLIC_URL}/dashboard/blog`\r\n                    }}>\r\n                        <li>Blog</li>\r\n                    </NavLink>\r\n                    <NavLink to={{\r\n                        pathname: `${process.env.PUBLIC_URL}/dashboard/meal`\r\n                    }}>\r\n                        <li>Meal</li>\r\n                    </NavLink>\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        help: state.helpReducer.getCategories\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Aside)","import * as All from '../const/ConstTypes'\r\n\r\nexport const getCategoriesHelpCenter = url => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(getCategories => {\r\n                dispatch({\r\n                    type: All.GETCATEGORIESHELP,\r\n                    getCategories: getCategories\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const postCategoriesHelpCenter = (url, body, isPatch) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: isPatch ? 'PATCH' : 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }).then(response => response.json())\r\n            .then(postCategories => {\r\n                dispatch({\r\n                    type: All.POSTCATEGORIESHELP,\r\n                    postCategories: postCategories\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteCategoriesHelpCenter = url => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(deleteCategories => {\r\n                dispatch({\r\n                    type: All.DELETECATEGORIESHELP,\r\n                    deleteCategories: deleteCategories\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const patchOrderHelpCenter = (url, body) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }).then(response => response.json())\r\n            .then(patchOrder => {\r\n                dispatch({\r\n                    type: All.PATCHORDERHELP,\r\n                    patchOrder: patchOrder\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteQuestionsHelpCenter = url => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(deleteQuestions => {\r\n                dispatch({\r\n                    type: All.DELETEQUESTIONSHELP,\r\n                    deleteQuestions: deleteQuestions\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}","export const BASEPATH = 'https://andoghevian-chef-app.herokuapp.com'\r\n\r\nexport const USERSMEURL = `${BASEPATH}/users/me`\r\nexport const DELETEUSERURL = `${BASEPATH}/users/`\r\n\r\nexport const GETMEALSURL = `${BASEPATH}/meals`\r\n\r\nexport const VERIFYURL = `${BASEPATH}/users/local/auth/code/verify`\r\nexport const REFRESHVERIFYURL = `${BASEPATH}/users/local/auth/code/refresh`\r\n\r\nexport const SIGNUPLOCALURL = `${BASEPATH}/users/local/auth/signup`\r\nexport const LOGINLOCALURL = `${BASEPATH}/users/local/auth/login`\r\nexport const LOGINFBURL = `${BASEPATH}/users/facebook/auth/login`\r\nexport const LOGOUTLOCALURL = `${BASEPATH}/users/local/auth/logout`\r\n\r\nexport const FILTERSURL = `${BASEPATH}/filters`\r\n\r\nexport const TESTIMONIALSURL = `${BASEPATH}/testimonials`\r\nexport const POSTTESTIMONIALSURL = `${BASEPATH}/users/me/testimonials`\r\n\r\nexport const FORGETPASSWORDURL = `${BASEPATH}/users/local/password/forget`\r\nexport const CHANGEPASSWORDURL = `${BASEPATH}/users/local/password/change`\r\n\r\nexport const HELPCENTERCATGURL = `${BASEPATH}/help-center/categories`\r\n\r\nexport const ABOUTUSGETMEMBERSURL = `${BASEPATH}/about-us/team`","import HelpGeneral from './HelpGeneral'\r\n\r\nexport default HelpGeneral","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { HELPCENTERCATGURL } from '../../../const/ConstUrl'\r\nimport {\r\n    deleteQuestionsHelpCenter,\r\n    postCategoriesHelpCenter,\r\n    patchOrderHelpCenter\r\n} from '../../../action/Action'\r\nimport {\r\n    Input,\r\n    Button\r\n} from '../../Form'\r\nimport './HelpGeneral.scss'\r\n\r\nconst HelpGeneral = props => {\r\n\r\n    const [id, setId] = useState({\r\n        id: '',\r\n        isOpen: false\r\n    })\r\n    const [edit, isEdit] = useState({\r\n        id: '',\r\n        isOpen: false\r\n    })\r\n    const [order, setOrder] = useState({\r\n        id: '',\r\n        isActive: false\r\n    })\r\n    const [orderValue, setOrderValue] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n\r\n    const deleteQuest = id => {\r\n        props.deleteQuestHelp(`${HELPCENTERCATGURL}/questions/${id}`)\r\n    }\r\n\r\n    const editQuest = (id, e) => {\r\n        e.preventDefault()\r\n        let sendObj = {}\r\n        if (answer == '') {\r\n            sendObj = {\r\n                title: title,\r\n                label: title.split(' ').join('_').toLowerCase()\r\n            }\r\n        } else if (title == '') {\r\n            sendObj = {\r\n                answere: answer\r\n            }\r\n        } else sendObj = {\r\n            title: title,\r\n            label: title.split(' ').join('_').toLowerCase(),\r\n            answere: answer\r\n        }\r\n\r\n        props.postQuest(`${HELPCENTERCATGURL}/questions/${id}`, sendObj, true)\r\n    }\r\n\r\n    const changeOrderQuestion = (id, e) => {\r\n        e.preventDefault()\r\n\r\n        const sendObj = {\r\n            newIndex: orderValue\r\n        }\r\n        props.patchOrderHelp(`${HELPCENTERCATGURL}/questions/${id}/order`, sendObj)\r\n    }\r\n\r\n    return (\r\n        <section className='HelpGeneral'>\r\n            {props.item.questions.map((item, index) =>\r\n                <div className='HelpGeneral-Item' key={item._id}>\r\n                    <div>\r\n                        <h1 onClick={() => setId({ id: item._id, isOpen: !id.isOpen })}>\r\n                            {item.title}\r\n                        </h1>\r\n                        <p onClick={() => setOrder({ id: item._id, isActive: !order.isActive })}>Index` {index}</p>\r\n                        {order.id == item._id && order.isActive &&\r\n                            <form onSubmit={e => changeOrderQuestion(item._id, e)}>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='order'\r\n                                    placeholder='Order'\r\n                                    value={orderValue}\r\n                                    onChange={e => setOrderValue(e.target.value)}\r\n                                />\r\n                                <Input\r\n                                    type='submit'\r\n                                    className=\"Submit\"\r\n                                    value='SAVE'\r\n                                />\r\n                            </form>\r\n                        }\r\n                        {edit.id == item._id && edit.isOpen &&\r\n                            <form onSubmit={(e) => editQuest(item._id, e)}>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='question'\r\n                                    placeholder='Question'\r\n                                    value={title}\r\n                                    onChange={e => setTitle(e.target.value)}\r\n                                />\r\n                                <Input\r\n                                    type='text'\r\n                                    name='answere'\r\n                                    placeholder='Answere'\r\n                                    value={answer}\r\n                                    onChange={e => setAnswer(e.target.value)}\r\n                                />\r\n                                <Input\r\n                                    type='submit'\r\n                                    className=\"Submit\"\r\n                                    value='SAVE'\r\n                                />\r\n                            </form>}\r\n                        <div className='HelpGeneral-Item-Buttons'>\r\n                            <Button\r\n                                value='Delete'\r\n                                onClick={() => deleteQuest(item._id)}\r\n                                className='delete' />\r\n                            <Button\r\n                                value='Edit'\r\n                                onClick={() => isEdit({ id: item._id, isOpen: !edit.isOpen })} />\r\n                        </div>\r\n                    </div>\r\n                    {item._id == id.id && id.isOpen &&\r\n                        <p>{item.answere}</p>\r\n                    }\r\n                </div>\r\n            )}\r\n            <Link to={{\r\n                pathname: `${process.env.PUBLIC_URL}/dashboard/addhelp`,\r\n                query: props.id\r\n            }}\r\n            >\r\n                <Button value='Add Question' />\r\n            </Link>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteQuestHelp: url => dispatch(deleteQuestionsHelpCenter(url)),\r\n        postQuest: (url, body, isPatch) => dispatch(postCategoriesHelpCenter(url, body, isPatch)),\r\n        patchOrderHelp: (url, body) => dispatch(patchOrderHelpCenter(url, body))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(HelpGeneral)","import EditCat from './EditCat'\r\n\r\nexport default EditCat","import React, {\r\n    useState,\r\n    useEffect\r\n} from 'react'\r\nimport { Input, Button } from '../../Form'\r\nimport { connect } from 'react-redux'\r\nimport { postCategoriesHelpCenter } from '../../../action/Action'\r\nimport { HELPCENTERCATGURL } from '../../../const/ConstUrl'\r\nimport './EditCat.scss'\r\n\r\nconst EditCat = props => {\r\n\r\n    const [categoryValue, setCategoryValue] = useState('')\r\n    const [success, setIsSuccess] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const handleSubmit = (id, e) => {\r\n        e.preventDefault()\r\n\r\n        const sendObj = {\r\n            title: categoryValue,\r\n            label: categoryValue.split(' ').join('_').toLowerCase()\r\n        }\r\n        props.patchCategories(`${HELPCENTERCATGURL}/${id}`, sendObj, true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.helpPOST != undefined) {\r\n            if (props.helpPOST.error_code == undefined) {\r\n                setIsSuccess(true)\r\n            } else {\r\n                setErrorMessage(props.helpPOST.message)\r\n            }\r\n        }\r\n    }, [props.helpPOST])\r\n\r\n    if (success) {\r\n        props.closeCat()\r\n    }\r\n\r\n    return (\r\n        <section className='EditCat'>\r\n            {errorMessage !== '' && <p>{errorMessage}</p>}\r\n            <form onSubmit={e => handleSubmit(props.id, e)} className='EditCat-Cont'>\r\n                <div>\r\n                    <Input\r\n                        type='text'\r\n                        name='title'\r\n                        placeholder='Title'\r\n                        value={categoryValue}\r\n                        onChange={e => setCategoryValue(e.target.value)} />\r\n                    <div>\r\n                        <Input\r\n                            type='submit'\r\n                            className=\"Submit custom\"\r\n                            value='Change' />\r\n                        <Button\r\n                            value='Close'\r\n                            onClick={() => props.closeCat()} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        helpPOST: state.helpReducer.postCategories\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        patchCategories: (url, body, isPatch) => dispatch(postCategoriesHelpCenter(url, body, isPatch))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCat)","import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react'\r\nimport {\r\n    NavLink,\r\n    Redirect\r\n} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    getCategoriesHelpCenter,\r\n    deleteCategoriesHelpCenter,\r\n    patchOrderHelpCenter,\r\n    postCategoriesHelpCenter\r\n} from '../../action/Action'\r\nimport { HELPCENTERCATGURL } from '../../const/ConstUrl'\r\nimport HelpGeneral from './HelpGeneral'\r\nimport {\r\n    Input,\r\n    Button\r\n} from '../Form'\r\nimport { EditCat } from '../Modal'\r\nimport './Help.scss'\r\n\r\nlet _ = require('lodash')\r\n\r\nconst Help = props => {\r\n\r\n    const [isAdd, setIsAdd] = useState(false)\r\n    const [catId, setCatId] = useState('')\r\n    const [isOpenModal, setIsOpenModal] = useState(false)\r\n    const [order, setOrder] = useState({\r\n        id: '',\r\n        isActive: false\r\n    })\r\n    const [value, setValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        props.getCategoriesHelp(HELPCENTERCATGURL)\r\n    }, [\r\n        props.helpDELETECAT,\r\n        props.helpDELETEQUEST,\r\n        props.helpORDER,\r\n        props.helpPOST\r\n    ])\r\n\r\n    const handleSubmit = (id, e) => {\r\n        e.preventDefault()\r\n\r\n        const sendObj = {\r\n            newIndex: value\r\n        }\r\n        props.patchOrderHelp(`${HELPCENTERCATGURL}/${id}/order`, sendObj)\r\n    }\r\n\r\n    if (isAdd) {\r\n        return (\r\n            <Redirect to={{\r\n                pathname: `${process.env.PUBLIC_URL}/dashboard/addhelp`\r\n            }} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className=\"Help\">\r\n            <div className=\"Help-Cont innerWrap\">\r\n                <h1 className=\"Help-Cont-Title\">Help Center</h1>\r\n                <div className=\"Help-Cont-Wrap\">\r\n                    <div className=\"Help-Cont-Wrap-Menu\">\r\n                        {props.helpGET.map(item =>\r\n                            <div className='Help-Cont-Wrap-Menu-Items' key={item._id}>\r\n                                <NavLink to={{\r\n                                    pathname: `${process.env.PUBLIC_URL}/dashboard/help/${item._id}`,\r\n                                }}\r\n                                    activeClassName='isActive'>\r\n                                    <p>{item.title}</p>\r\n                                    <p onClick={() => setOrder({ id: item._id, isActive: !order.isActive })}>Index` {item.orderIndex}</p>\r\n                                </NavLink>\r\n                                {order.id == item._id && order.isActive &&\r\n                                    <form onSubmit={e => handleSubmit(item._id, e)}>\r\n                                        <Input\r\n                                            type='text'\r\n                                            name='order'\r\n                                            placeholder='Order'\r\n                                            value={value}\r\n                                            onChange={e => setValue(e.target.value)} />\r\n                                        <Input\r\n                                            type='submit'\r\n                                            className=\"Submit\"\r\n                                            value='ADD' />\r\n                                    </form>}\r\n                                <div className='Help-Cont-Wrap-Menu-Items-Edit'>\r\n                                    <Button\r\n                                        onClick={() => props.deleteCategoriesHelp(`${HELPCENTERCATGURL}/${item._id}`)}\r\n                                        value='Delete'\r\n                                        className='Help-Cont-Wrap-Menu-Items-Edit_delete' />\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                            setIsOpenModal(true)\r\n                                            setCatId(item._id)\r\n                                        }}\r\n                                        value='Edit' />\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"Help-Cont-Wrap-Context\">\r\n                        {props.helpGET.map(item =>\r\n                            props.match.params.id == item._id && <HelpGeneral key={item._id}\r\n                                item={item}\r\n                                id={props.match.params.id} />)}\r\n                    </div>\r\n                    {isOpenModal && <EditCat\r\n                        closeCat={() => setIsOpenModal(false)}\r\n                        id={catId} />\r\n                    }\r\n                </div>\r\n                <Button\r\n                    value='Add Help'\r\n                    onClick={() => setIsAdd(true)} />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        helpGET: state.helpReducer.getCategories,\r\n        helpPOST: state.helpReducer.postCategories,\r\n        helpORDER: state.helpReducer.patchOrder,\r\n        helpDELETECAT: state.helpReducer.deleteCategories,\r\n        helpDELETEQUEST: state.helpReducer.deleteQuestions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCategoriesHelp: url => dispatch(getCategoriesHelpCenter(url)),\r\n        deleteCategoriesHelp: url => dispatch(deleteCategoriesHelpCenter(url)),\r\n        patchOrderHelp: (url, body) => dispatch(patchOrderHelpCenter(url, body)),\r\n        patchCategories: (url, body, isPatch) => dispatch(postCategoriesHelpCenter(url, body, isPatch))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Help)","import React, {\r\n    useState,\r\n    useEffect\r\n} from 'react'\r\nimport { Input } from '../../Form'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { postCategoriesHelpCenter } from '../../../action/Action'\r\nimport { HELPCENTERCATGURL } from '../../../const/ConstUrl'\r\nimport './AddHelp.scss'\r\n\r\nlet _ = require('lodash')\r\n\r\nconst AddHelp = props => {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [titleLabel, setTitleLabel] = useState('')\r\n    const [question, setQuestion] = useState('')\r\n    const [questionLabel, setQuestionLabel] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n    const [id, setId] = useState(props.location.query)\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const getTitle = () => {\r\n        props.helpGET.map(item => {\r\n            if (props.location.query == item._id) {\r\n                setTitle(item.title)\r\n                setTitleLabel(item.title.split(' ').join('_').toLowerCase())\r\n            }\r\n        })\r\n    }\r\n    title == '' && getTitle()\r\n\r\n    const handelSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (id == undefined) {\r\n            const sendObj = {\r\n                title: title,\r\n                label: titleLabel,\r\n                questions: [\r\n                    {\r\n                        title: question,\r\n                        label: questionLabel,\r\n                        answere: answer\r\n                    }\r\n                ]\r\n            }\r\n            props.postCategoriesHelp(HELPCENTERCATGURL, sendObj)\r\n        }\r\n        else {\r\n            const sendObj = {\r\n                title: question,\r\n                answere: answer,\r\n                label: questionLabel\r\n            }\r\n            props.postCategoriesHelp(`${HELPCENTERCATGURL}/${id}/questions`, sendObj)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!_.isEmpty(props.helpGET) && !_.isEmpty(props.helpPost)) {\r\n            if (props.helpPost.error_code == undefined) {\r\n                setIsSuccess(true)\r\n            } else {\r\n                setErrorMessage(props.helpPost.message)\r\n            }\r\n        }\r\n    }, [props.helpPost])\r\n\r\n    if (isSuccess) {\r\n        return (\r\n            <Redirect to={{\r\n                pathname: `${process.env.PUBLIC_URL}/dashboard/help/${props.helpGET[0]._id}`\r\n            }} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className='AddHelp'>\r\n            {errorMessage !== '' && <p>{errorMessage}</p>}\r\n            <form onSubmit={handelSubmit}>\r\n                <Input\r\n                    type='text'\r\n                    name='title'\r\n                    placeholder='Title'\r\n                    value={title}\r\n                    onChange={e => {\r\n                        setTitle(e.target.value)\r\n                        let label = e.target.value.split(' ').join('_')\r\n                        setTitleLabel(label.toLowerCase())\r\n                    }} />\r\n                <Input\r\n                    type='text'\r\n                    name='title'\r\n                    placeholder='Title-label'\r\n                    value={titleLabel}\r\n                    onChange={e => setTitleLabel(e.target.value.split(' ').join('_').toLowerCase())} />\r\n                <Input\r\n                    type='text'\r\n                    name='question'\r\n                    placeholder='Question'\r\n                    value={question}\r\n                    onChange={e => {\r\n                        setQuestion(e.target.value)\r\n                        let label = e.target.value.split(' ').join('_')\r\n                        setQuestionLabel(label.toLowerCase())\r\n                    }} />\r\n                <Input\r\n                    type='text'\r\n                    name='title'\r\n                    placeholder='Question-label'\r\n                    value={questionLabel}\r\n                    onChange={e => setQuestionLabel(e.target.value.split(' ').join('_').toLowerCase())} />\r\n                <Input\r\n                    type='text'\r\n                    name='answer'\r\n                    placeholder='Answeer'\r\n                    value={answer}\r\n                    onChange={e => setAnswer(e.target.value)} />\r\n                <Input\r\n                    type='submit'\r\n                    className=\"Submit\"\r\n                    value='ADD'\r\n                />\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        helpGET: state.helpReducer.getCategories,\r\n        helpPost: state.helpReducer.postCategories\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        postCategoriesHelp: (url, body) => dispatch(postCategoriesHelpCenter(url, body))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddHelp)","import AddHelp from \"./AddHelp\";\r\n\r\nexport default AddHelp","import Blog from './Blog'\r\n\r\nexport default Blog","import React from 'react'\r\nimport './Blog.scss'\r\n\r\nconst Blog = () => {\r\n\r\n    return (\r\n        <section className='Blog'>\r\n            Blog\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Blog\r\n","import Meal from './Meal'\r\n\r\nexport default Meal","import React from 'react'\r\nimport './Meal.scss'\r\n\r\nconst Meal = () => {\r\n\r\n    return (\r\n        <section className='Meal'>\r\n            Meal\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Meal","import Tabs from './Tabs'\r\n\r\nexport default Tabs","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { Help, AddHelp } from '../Help'\r\nimport Blog from '../Blog'\r\nimport Meal from '../Meal'\r\nimport './Tabs.scss'\r\n\r\nconst Tabs = () => {\r\n\r\n    return (\r\n        <section className='Tabs'>\r\n            <Route path={`${process.env.PUBLIC_URL}/dashboard/help/:id`} component={Help} />\r\n            <Route path={`${process.env.PUBLIC_URL}/dashboard/addhelp`} component={AddHelp} />\r\n            <Route path={`${process.env.PUBLIC_URL}/dashboard/blog`} component={Blog} />\r\n            <Route path={`${process.env.PUBLIC_URL}/dashboard/meal`} component={Meal} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Tabs","import Dashboard from './Dashboard'\r\n\r\nexport default Dashboard","import React from 'react'\r\nimport Aside from '../Aside'\r\nimport Tabs from '../Tabs'\r\nimport './Dashboard.scss'\r\n\r\nconst Dashboard = () => {\r\n\r\n    return (\r\n        <section className='Dashboard'>\r\n            <div className='Dashboard-Cont'>\r\n                <Aside />\r\n                <Tabs />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { useEffect } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport SignIn from './components/SignIn'\r\nimport Dashboard from './components/Dashboard';\r\nimport { connect } from 'react-redux'\r\nimport { getCategoriesHelpCenter } from './action/Action';\r\nimport { HELPCENTERCATGURL } from './const/ConstUrl'\r\nimport './App.scss';\r\n\r\nlet _ = require('lodash')\r\n\r\nconst App = props => {\r\n\r\n  useEffect(() => {\r\n    if (_.isEmpty(props.help)) {\r\n      props.getCategoriesHelp(HELPCENTERCATGURL)\r\n    }\r\n  }, [])\r\n\r\n  if (_.isEmpty(props.help)) {\r\n    return (\r\n      <div>\r\n        Loading...\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path={`${process.env.PUBLIC_URL}/`} component={SignIn} exact />\r\n          <Route path={`${process.env.PUBLIC_URL}/dashboard`} component={Dashboard} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    help: state.helpReducer.getCategories\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCategoriesHelp: url => dispatch(getCategoriesHelpCenter(url))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n"],"sourceRoot":""}