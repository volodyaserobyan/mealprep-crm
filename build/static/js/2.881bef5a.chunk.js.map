{"version":3,"sources":["assets/Images/VectorMessage.svg","components/Form/Input/index.js","components/Form/Input/Input.js","components/Form/Button/index.js","components/Form/Button/Button.js","components/SignIn/index.js","components/SignIn/SignIn.js","components/Aside/index.js","components/Aside/Aside.js","action/Action.js","const/ConstUrl.js","components/Help/HelpGeneral/index.js","components/Help/HelpGeneral/HelpGeneral.js","components/Modal/Help/index.js","components/Modal/Help/EditCat.js","components/Help/Help.js","components/Help/AddHelp/AddHelp.js","components/Help/AddHelp/index.js","components/Blog/AddBlog/AddBlog.js","components/Blog/AddBlog/index.js","components/Blog/Item/index.js","components/Blog/Item/Item.js","components/Blog/Blog.js","components/Blog/index.js","components/Meal/index.js","components/Meal/Meal.js","components/Tabs/index.js","components/Tabs/Tabs.js","components/Dashboard/index.js","components/Dashboard/Dashboard.js","App.js"],"names":["module","exports","Input","props","type","name","placeholder","className","classNames","value","onChange","e","Button","onClick","undefined","SignIn","connect","state","help","helpReducer","getCategories","useState","mail","setMails","password","setPassword","isSuccess","setIsSuccess","to","pathname","process","_id","onSubmit","preventDefault","target","Aside","getCategoriesHelpCenter","url","dispatch","All","fetch","method","headers","then","response","json","catch","error","data","postCategoriesHelpCenter","body","isPatch","JSON","stringify","postCategories","patchOrderHelpCenter","patchOrder","deleteReset","BASEPATH","HELPCENTERCATGURL","BLOGURL","HelpGeneral","deleteQuestHelp","deleteQuestions","deleteQuestionsHelpCenter","postQuest","patchOrderHelp","id","isOpen","setId","edit","isEdit","isActive","order","setOrder","orderValue","setOrderValue","title","setTitle","answer","setAnswer","item","questions","map","index","key","sendObj","newIndex","changeOrderQuestion","label","split","join","toLowerCase","answere","editQuest","deleteQuest","query","EditCat","helpPOST","patchCategories","categoryValue","setCategoryValue","success","errorMessage","setErrorMessage","useEffect","error_code","message","closeCat","handleSubmit","require","helpGET","helpORDER","helpDELETECAT","deleteCategories","helpDELETEQUEST","getCategoriesHelp","deleteCategoriesHelp","deleteCategoriesHelpCenter","isAdd","setIsAdd","catId","setCatId","isOpenModal","setIsOpenModal","setValue","activeClassName","orderIndex","match","params","_","AddHelp","helpPost","postCategoriesHelp","reset","titleLabel","setTitleLabel","question","setQuestion","questionLabel","setQuestionLabel","location","isEmpty","AddBlog","isFetching","blogReducer","articlesPOST","postArticles","postArticle","resetPost","setLabel","desc","setDesc","kinds","setKinds","tags","setTags","alert","kindArr","tagsArr","Item","deleteBlog","picture","alt","src","Object","keys","created_at","slice","indexOf","messageItem","Blog","compose","articles","getArticles","getKinds","kindsCount","getKindsCount","deleteArticle","bool","isSimilarArticle","getArticlesSimilar","getBlogKinds","getBlogKindsCount","resetDelete","withRouter","isAddBlog","setIsAddBlog","i","length","push","hanndleKinds","history","window","href","includes","count","Meal","Tabs","path","component","Help","Dashboard","exact"],"mappings":"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","file":"static/js/2.881bef5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/VectorMessage.c70eb1eb.svg\";","import Input from \"./Input\";\r\n\r\nexport default Input","import React from 'react'\r\nimport './Input.scss'\r\nimport classNames from 'classnames'\r\n\r\nconst Input = props => {\r\n\r\n    return (\r\n        <input\r\n            type={props.type}\r\n            name={props.name}\r\n            placeholder={props.placeholder}\r\n            className={classNames('input', props.className)}\r\n            value={props.value}\r\n            onChange={e => props.onChange(e)} />\r\n    )\r\n}\r\n\r\nexport default Input","import Button from './Button'\r\n\r\nexport default Button","import React from 'react'\r\nimport classNames from 'classnames'\r\nimport './Button.scss'\r\n\r\nconst Button = props => {\r\n\r\n    return (\r\n        <button onClick={e => props.onClick !== undefined && props.onClick(e)} className={classNames('button', props.className)}>{props.value}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import SignIn from './SignIn'\r\n\r\nexport default SignIn","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Input } from '../Form'\r\nimport './SignIn.scss'\r\n\r\nconst SignIn = props => {\r\n    const [mail, setMails] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (password !== '' && mail !== '') {\r\n            setIsSuccess(true)\r\n        }\r\n    }\r\n\r\n    if (isSuccess) {\r\n        return (\r\n            <Redirect to={{\r\n                pathname: `${process.env.PUBLIC_URL}/dashboard/help/${props.help[0]._id}`\r\n            }} />\r\n        )\r\n    }\r\n    return (\r\n        <section className=\"SignIn\">\r\n            <div className=\"SignIn-Cont\">\r\n                <h1>Sign In</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Input\r\n                        type='text'\r\n                        name='mail'\r\n                        placeholder='E-mail'\r\n                        value={mail}\r\n                        onChange={e => setMails(e.target.value)}\r\n                    />\r\n                    <Input\r\n                        type='password'\r\n                        name='password'\r\n                        placeholder='Password'\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    />\r\n                    <Input\r\n                        type='submit'\r\n                        className=\"Submit\"\r\n                        value='LOGIN'\r\n                    />\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        help: state.helpReducer.getCategories\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SignIn)","import Aside from './Aside'\r\n\r\nexport default Aside","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport './Aside.scss'\r\n\r\nconst Aside = props => {\r\n    return (\r\n        <section className='Aside'>\r\n            <div className='Aside-Cont'>\r\n                <ul>\r\n                    <NavLink to={{\r\n                        pathname: `${process.env.PUBLIC_URL}/dashboard/help/${props.help[0]._id}`\r\n                    }}>\r\n                        <li>Help</li>\r\n                    </NavLink>\r\n                    <NavLink to={{\r\n                        pathname: `${process.env.PUBLIC_URL}/dashboard/blog/all`\r\n                    }}>\r\n                        <li>Blog</li>\r\n                    </NavLink>\r\n                    <NavLink to={{\r\n                        pathname: `${process.env.PUBLIC_URL}/dashboard/meal`\r\n                    }}>\r\n                        <li>Meal</li>\r\n                    </NavLink>\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        help: state.helpReducer.getCategories\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Aside)","import * as All from '../const/ConstTypes'\r\n\r\n///////////////////////HELP/////////////////////\r\nexport const getCategoriesHelpCenter = url => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(getCategories => {\r\n                dispatch({\r\n                    type: All.GETCATEGORIESHELP,\r\n                    getCategories: getCategories\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const postCategoriesHelpCenter = (url, body, isPatch) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: isPatch ? 'PATCH' : 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }).then(response => response.json())\r\n            .then(postCategories => {\r\n                dispatch({\r\n                    type: All.POSTCATEGORIESHELP,\r\n                    postCategories: postCategories\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteCategoriesHelpCenter = url => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(deleteCategories => {\r\n                dispatch({\r\n                    type: All.DELETECATEGORIESHELP,\r\n                    deleteCategories: deleteCategories\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const patchOrderHelpCenter = (url, body) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }).then(response => response.json())\r\n            .then(patchOrder => {\r\n                dispatch({\r\n                    type: All.PATCHORDERHELP,\r\n                    patchOrder: patchOrder\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const resetHelpPost = () => {\r\n    return {\r\n        type: 'RESET_HELPPOST'\r\n    }\r\n}\r\n\r\nexport const deleteQuestionsHelpCenter = url => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(deleteQuestions => {\r\n                dispatch({\r\n                    type: All.DELETEQUESTIONSHELP,\r\n                    deleteQuestions: deleteQuestions\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\n/////////////BLOG//////////////////\r\n\r\nexport const getArticles = (url, isSimilarArticle) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHBLOG\r\n        });\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(getArticles => {\r\n                isSimilarArticle ?\r\n                    dispatch({\r\n                        type: All.GETSIMILARARTICLES,\r\n                        getArticlesSimilar: getArticles\r\n                    }) :\r\n                    dispatch({\r\n                        type: All.GETARTICLES,\r\n                        getArticles: getArticles\r\n                    })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORBLOG,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const postArticles = (url, body) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHBLOG\r\n        });\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }).then(response => response.json())\r\n            .then(postArticles => {\r\n                dispatch({\r\n                    type: All.POSTARTICLE,\r\n                    postArticles: postArticles\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORBLOG,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const resetPostArticles = () => {\r\n    return {\r\n        type: All.RESETPOST\r\n    }\r\n}\r\n\r\nexport const getBlogKinds = url => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHBLOG\r\n        });\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(getKinds => {\r\n                dispatch({\r\n                    type: All.GETKINDS,\r\n                    getKinds: getKinds\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORBLOG,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const getBlogKindsCount = url => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHBLOG\r\n        });\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(getKindsCount => {\r\n                dispatch({\r\n                    type: All.GETKINDSCOUNT,\r\n                    getKindsCount: getKindsCount\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORBLOG,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteBlog = url => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHBLOG\r\n        });\r\n        fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(deleteBlog => {\r\n                dispatch({\r\n                    type: All.DELETEBLOG,\r\n                    deleteBlog: deleteBlog\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORBLOG,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteReset = () => {\r\n    return {\r\n        type: All.RESETDELETE\r\n    }\r\n}","export const BASEPATH = 'https://andoghevian-chef-app.herokuapp.com'\r\n\r\nexport const USERSMEURL = `${BASEPATH}/users/me`\r\nexport const DELETEUSERURL = `${BASEPATH}/users/`\r\n\r\nexport const GETMEALSURL = `${BASEPATH}/meals`\r\n\r\nexport const VERIFYURL = `${BASEPATH}/users/local/auth/code/verify`\r\nexport const REFRESHVERIFYURL = `${BASEPATH}/users/local/auth/code/refresh`\r\n\r\nexport const SIGNUPLOCALURL = `${BASEPATH}/users/local/auth/signup`\r\nexport const LOGINLOCALURL = `${BASEPATH}/users/local/auth/login`\r\nexport const LOGINFBURL = `${BASEPATH}/users/facebook/auth/login`\r\nexport const LOGOUTLOCALURL = `${BASEPATH}/users/local/auth/logout`\r\n\r\nexport const GETPLANSURL = `${BASEPATH}/orders/plans`\r\n\r\nexport const FILTERSURL = `${BASEPATH}/filters`\r\n\r\nexport const TESTIMONIALSURL = `${BASEPATH}/testimonials`\r\nexport const POSTTESTIMONIALSURL = `${BASEPATH}/users/me/testimonials`\r\n\r\nexport const FORGETPASSWORDURL = `${BASEPATH}/users/local/password/forget`\r\nexport const CHANGEPASSWORDURL = `${BASEPATH}/users/local/password/change`\r\n\r\nexport const HELPCENTERCATGURL = `${BASEPATH}/help-center/categories`\r\n\r\nexport const BLOGURL = `${BASEPATH}/blog`\r\n\r\nexport const ABOUTUSGETMEMBERSURL = `${BASEPATH}/about-us/team`","import HelpGeneral from './HelpGeneral'\r\n\r\nexport default HelpGeneral","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { HELPCENTERCATGURL } from '../../../const/ConstUrl'\r\nimport {\r\n    deleteQuestionsHelpCenter,\r\n    postCategoriesHelpCenter,\r\n    patchOrderHelpCenter\r\n} from '../../../action/Action'\r\nimport {\r\n    Input,\r\n    Button\r\n} from '../../Form'\r\nimport './HelpGeneral.scss'\r\n\r\nconst HelpGeneral = props => {\r\n\r\n    const [id, setId] = useState({\r\n        id: '',\r\n        isOpen: false\r\n    })\r\n    const [edit, isEdit] = useState({\r\n        id: '',\r\n        isOpen: false\r\n    })\r\n    const [order, setOrder] = useState({\r\n        id: '',\r\n        isActive: false\r\n    })\r\n    const [orderValue, setOrderValue] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n\r\n    const deleteQuest = id => {\r\n        props.deleteQuestHelp(`${HELPCENTERCATGURL}/questions/${id}`)\r\n    }\r\n\r\n    const editQuest = (id, e) => {\r\n        e.preventDefault()\r\n        let sendObj = {}\r\n        if (answer == '') {\r\n            sendObj = {\r\n                title: title,\r\n                label: title.split(' ').join('_').toLowerCase()\r\n            }\r\n        } else if (title == '') {\r\n            sendObj = {\r\n                answere: answer\r\n            }\r\n        } else sendObj = {\r\n            title: title,\r\n            label: title.split(' ').join('_').toLowerCase(),\r\n            answere: answer\r\n        }\r\n\r\n        props.postQuest(`${HELPCENTERCATGURL}/questions/${id}`, sendObj, true)\r\n    }\r\n\r\n    const changeOrderQuestion = (id, e) => {\r\n        e.preventDefault()\r\n\r\n        const sendObj = {\r\n            newIndex: orderValue\r\n        }\r\n        props.patchOrderHelp(`${HELPCENTERCATGURL}/questions/${id}/order`, sendObj)\r\n    }\r\n\r\n    return (\r\n        <section className='HelpGeneral'>\r\n            {props.item.questions.map((item, index) =>\r\n                <div className='HelpGeneral-Item' key={item._id}>\r\n                    <div>\r\n                        <h1 onClick={() => setId({ id: item._id, isOpen: !id.isOpen })}>\r\n                            {item.title}\r\n                        </h1>\r\n                        <p onClick={() => setOrder({ id: item._id, isActive: !order.isActive })}>Index` {index}</p>\r\n                        {order.id == item._id && order.isActive &&\r\n                            <form onSubmit={e => changeOrderQuestion(item._id, e)}>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='order'\r\n                                    placeholder='Order'\r\n                                    value={orderValue}\r\n                                    onChange={e => setOrderValue(e.target.value)}\r\n                                />\r\n                                <Input\r\n                                    type='submit'\r\n                                    className=\"Submit\"\r\n                                    value='SAVE'\r\n                                />\r\n                            </form>\r\n                        }\r\n                        {edit.id == item._id && edit.isOpen &&\r\n                            <form onSubmit={(e) => editQuest(item._id, e)}>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='question'\r\n                                    placeholder='Question'\r\n                                    value={title}\r\n                                    onChange={e => setTitle(e.target.value)}\r\n                                />\r\n                                <Input\r\n                                    type='text'\r\n                                    name='answere'\r\n                                    placeholder='Answere'\r\n                                    value={answer}\r\n                                    onChange={e => setAnswer(e.target.value)}\r\n                                />\r\n                                <Input\r\n                                    type='submit'\r\n                                    className=\"Submit\"\r\n                                    value='SAVE'\r\n                                />\r\n                            </form>}\r\n                        <div className='HelpGeneral-Item-Buttons'>\r\n                            <Button\r\n                                value='Delete'\r\n                                onClick={() => deleteQuest(item._id)}\r\n                                className='delete' />\r\n                            <Button\r\n                                value='Edit'\r\n                                onClick={() => isEdit({ id: item._id, isOpen: !edit.isOpen })} />\r\n                        </div>\r\n                    </div>\r\n                    {item._id == id.id && id.isOpen &&\r\n                        <p>{item.answere}</p>\r\n                    }\r\n                </div>\r\n            )}\r\n            <Link to={{\r\n                pathname: `${process.env.PUBLIC_URL}/dashboard/addhelp`,\r\n                query: props.id\r\n            }}\r\n            >\r\n                <Button value='Add Question' />\r\n            </Link>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteQuestHelp: url => dispatch(deleteQuestionsHelpCenter(url)),\r\n        postQuest: (url, body, isPatch) => dispatch(postCategoriesHelpCenter(url, body, isPatch)),\r\n        patchOrderHelp: (url, body) => dispatch(patchOrderHelpCenter(url, body))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(HelpGeneral)","import EditCat from './EditCat'\r\n\r\nexport default EditCat","import React, {\r\n    useState,\r\n    useEffect\r\n} from 'react'\r\nimport { Input, Button } from '../../Form'\r\nimport { connect } from 'react-redux'\r\nimport { postCategoriesHelpCenter } from '../../../action/Action'\r\nimport { HELPCENTERCATGURL } from '../../../const/ConstUrl'\r\nimport './EditCat.scss'\r\n\r\nconst EditCat = props => {\r\n\r\n    const [categoryValue, setCategoryValue] = useState('')\r\n    const [success, setIsSuccess] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const handleSubmit = (id, e) => {\r\n        e.preventDefault()\r\n\r\n        const sendObj = {\r\n            title: categoryValue,\r\n            label: categoryValue.split(' ').join('_').toLowerCase()\r\n        }\r\n        props.patchCategories(`${HELPCENTERCATGURL}/${id}`, sendObj, true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.helpPOST != undefined) {\r\n            if (props.helpPOST.error_code == undefined) {\r\n                setIsSuccess(true)\r\n            } else {\r\n                setErrorMessage(props.helpPOST.message)\r\n            }\r\n        }\r\n    }, [props.helpPOST])\r\n\r\n    if (success) {\r\n        props.closeCat()\r\n    }\r\n\r\n    return (\r\n        <section className='EditCat'>\r\n            {errorMessage !== '' && <p>{errorMessage}</p>}\r\n            <form onSubmit={e => handleSubmit(props.id, e)} className='EditCat-Cont'>\r\n                <div>\r\n                    <Input\r\n                        type='text'\r\n                        name='title'\r\n                        placeholder='Title'\r\n                        value={categoryValue}\r\n                        onChange={e => setCategoryValue(e.target.value)} />\r\n                    <div>\r\n                        <Input\r\n                            type='submit'\r\n                            className=\"Submit custom\"\r\n                            value='Change' />\r\n                        <Button\r\n                            value='Close'\r\n                            onClick={() => props.closeCat()} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        helpPOST: state.helpReducer.postCategories\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        patchCategories: (url, body, isPatch) => dispatch(postCategoriesHelpCenter(url, body, isPatch))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCat)","import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react'\r\nimport {\r\n    NavLink,\r\n    Redirect\r\n} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    getCategoriesHelpCenter,\r\n    deleteCategoriesHelpCenter,\r\n    patchOrderHelpCenter,\r\n    postCategoriesHelpCenter\r\n} from '../../action/Action'\r\nimport { HELPCENTERCATGURL } from '../../const/ConstUrl'\r\nimport HelpGeneral from './HelpGeneral'\r\nimport {\r\n    Input,\r\n    Button\r\n} from '../Form'\r\nimport { EditCat } from '../Modal'\r\nimport './Help.scss'\r\n\r\nlet _ = require('lodash')\r\n\r\nconst Help = props => {\r\n\r\n    const [isAdd, setIsAdd] = useState(false)\r\n    const [catId, setCatId] = useState('')\r\n    const [isOpenModal, setIsOpenModal] = useState(false)\r\n    const [order, setOrder] = useState({\r\n        id: '',\r\n        isActive: false\r\n    })\r\n    const [value, setValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        props.getCategoriesHelp(HELPCENTERCATGURL)\r\n    }, [\r\n        props.helpDELETECAT,\r\n        props.helpDELETEQUEST,\r\n        props.helpORDER,\r\n        props.helpPOST\r\n    ])\r\n\r\n    const handleSubmit = (id, e) => {\r\n        e.preventDefault()\r\n\r\n        const sendObj = {\r\n            newIndex: value\r\n        }\r\n        props.patchOrderHelp(`${HELPCENTERCATGURL}/${id}/order`, sendObj)\r\n    }\r\n\r\n    if (isAdd) {\r\n        return (\r\n            <Redirect to={{\r\n                pathname: `${process.env.PUBLIC_URL}/dashboard/addhelp`\r\n            }} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className=\"Help\">\r\n            <div className=\"Help-Cont innerWrap\">\r\n                <h1 className=\"Help-Cont-Title\">Help Center</h1>\r\n                <div className=\"Help-Cont-Wrap\">\r\n                    <div className=\"Help-Cont-Wrap-Menu\">\r\n                        {props.helpGET.map(item =>\r\n                            <div className='Help-Cont-Wrap-Menu-Items' key={item._id}>\r\n                                <NavLink to={{\r\n                                    pathname: `${process.env.PUBLIC_URL}/dashboard/help/${item._id}`,\r\n                                }}\r\n                                    activeClassName='isActive'>\r\n                                    <p>{item.title}</p>\r\n                                    <p onClick={() => setOrder({ id: item._id, isActive: !order.isActive })}>Index` {item.orderIndex}</p>\r\n                                </NavLink>\r\n                                {order.id == item._id && order.isActive &&\r\n                                    <form onSubmit={e => handleSubmit(item._id, e)}>\r\n                                        <Input\r\n                                            type='text'\r\n                                            name='order'\r\n                                            placeholder='Order'\r\n                                            value={value}\r\n                                            onChange={e => setValue(e.target.value)} />\r\n                                        <Input\r\n                                            type='submit'\r\n                                            className=\"Submit\"\r\n                                            value='ADD' />\r\n                                    </form>}\r\n                                <div className='Help-Cont-Wrap-Menu-Items-Edit'>\r\n                                    <Button\r\n                                        onClick={() => props.deleteCategoriesHelp(`${HELPCENTERCATGURL}/${item._id}`)}\r\n                                        value='Delete'\r\n                                        className='Help-Cont-Wrap-Menu-Items-Edit_delete' />\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                            setIsOpenModal(true)\r\n                                            setCatId(item._id)\r\n                                        }}\r\n                                        value='Edit' />\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"Help-Cont-Wrap-Context\">\r\n                        {props.helpGET.map(item =>\r\n                            props.match.params.id == item._id && <HelpGeneral key={item._id}\r\n                                item={item}\r\n                                id={props.match.params.id} />)}\r\n                    </div>\r\n                    {isOpenModal && <EditCat\r\n                        closeCat={() => setIsOpenModal(false)}\r\n                        id={catId} />\r\n                    }\r\n                </div>\r\n                <Button\r\n                    value='Add Help'\r\n                    onClick={() => setIsAdd(true)} />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        helpGET: state.helpReducer.getCategories,\r\n        helpPOST: state.helpReducer.postCategories,\r\n        helpORDER: state.helpReducer.patchOrder,\r\n        helpDELETECAT: state.helpReducer.deleteCategories,\r\n        helpDELETEQUEST: state.helpReducer.deleteQuestions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCategoriesHelp: url => dispatch(getCategoriesHelpCenter(url)),\r\n        deleteCategoriesHelp: url => dispatch(deleteCategoriesHelpCenter(url)),\r\n        patchOrderHelp: (url, body) => dispatch(patchOrderHelpCenter(url, body)),\r\n        patchCategories: (url, body, isPatch) => dispatch(postCategoriesHelpCenter(url, body, isPatch))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Help)","import React, {\r\n    useState,\r\n    useEffect\r\n} from 'react'\r\nimport { Input } from '../../Form'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { postCategoriesHelpCenter, resetHelpPost } from '../../../action/Action'\r\nimport { HELPCENTERCATGURL } from '../../../const/ConstUrl'\r\nimport './AddHelp.scss'\r\n\r\nlet _ = require('lodash')\r\n\r\nconst AddHelp = props => {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [titleLabel, setTitleLabel] = useState('')\r\n    const [question, setQuestion] = useState('')\r\n    const [questionLabel, setQuestionLabel] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n    const [id, setId] = useState(props.location.query)\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const getTitle = () => {\r\n        props.helpGET.map(item => {\r\n            if (props.location.query == item._id) {\r\n                setTitle(item.title)\r\n                setTitleLabel(item.title.split(' ').join('_').toLowerCase())\r\n            }\r\n        })\r\n    }\r\n    title == '' && getTitle()\r\n\r\n    const handelSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (id == undefined) {\r\n            const sendObj = {\r\n                title: title,\r\n                label: titleLabel,\r\n                questions: [\r\n                    {\r\n                        title: question,\r\n                        label: questionLabel,\r\n                        answere: answer\r\n                    }\r\n                ]\r\n            }\r\n            props.postCategoriesHelp(HELPCENTERCATGURL, sendObj)\r\n        }\r\n        else {\r\n            const sendObj = {\r\n                title: question,\r\n                answere: answer,\r\n                label: questionLabel\r\n            }\r\n            props.postCategoriesHelp(`${HELPCENTERCATGURL}/${id}/questions`, sendObj)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!_.isEmpty(props.helpGET) && !_.isEmpty(props.helpPost)) {\r\n            if (props.helpPost.error_code == undefined) {\r\n                setIsSuccess(true)\r\n            } else {\r\n                setErrorMessage(props.helpPost.message)\r\n            }\r\n        }\r\n    }, [props.helpPost])\r\n\r\n    useEffect(() => {\r\n        return () => props.reset()\r\n    })\r\n\r\n    if (isSuccess) {\r\n        return (\r\n            <Redirect to={{\r\n                pathname: `${process.env.PUBLIC_URL}/dashboard/help/${props.helpGET[0]._id}`\r\n            }} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className='AddHelp'>\r\n            {errorMessage !== '' && <p>{errorMessage}</p>}\r\n            <form onSubmit={handelSubmit}>\r\n                <Input\r\n                    type='text'\r\n                    name='title'\r\n                    placeholder='Title'\r\n                    value={title}\r\n                    onChange={e => {\r\n                        setTitle(e.target.value)\r\n                        let label = e.target.value.split(' ').join('_')\r\n                        setTitleLabel(label.toLowerCase())\r\n                    }} />\r\n                <Input\r\n                    type='text'\r\n                    name='title'\r\n                    placeholder='Title-label'\r\n                    value={titleLabel}\r\n                    onChange={e => setTitleLabel(e.target.value.split(' ').join('_').toLowerCase())} />\r\n                <Input\r\n                    type='text'\r\n                    name='question'\r\n                    placeholder='Question'\r\n                    value={question}\r\n                    onChange={e => {\r\n                        setQuestion(e.target.value)\r\n                        let label = e.target.value.split(' ').join('_')\r\n                        setQuestionLabel(label.toLowerCase())\r\n                    }} />\r\n                <Input\r\n                    type='text'\r\n                    name='title'\r\n                    placeholder='Question-label'\r\n                    value={questionLabel}\r\n                    onChange={e => setQuestionLabel(e.target.value.split(' ').join('_').toLowerCase())} />\r\n                <Input\r\n                    type='text'\r\n                    name='answer'\r\n                    placeholder='Answeer'\r\n                    value={answer}\r\n                    onChange={e => setAnswer(e.target.value)} />\r\n                <Input\r\n                    type='submit'\r\n                    className=\"Submit\"\r\n                    value='ADD'\r\n                />\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        helpGET: state.helpReducer.getCategories,\r\n        helpPost: state.helpReducer.postCategories\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        postCategoriesHelp: (url, body) => dispatch(postCategoriesHelpCenter(url, body)),\r\n        reset: () => dispatch(resetHelpPost())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddHelp)","import AddHelp from \"./AddHelp\";\r\n\r\nexport default AddHelp","import React, {\r\n    useState,\r\n    useEffect\r\n} from 'react'\r\nimport { Input } from '../../Form'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    postArticles,\r\n    resetPostArticles\r\n} from '../../../action/Action'\r\nimport { BLOGURL } from '../../../const/ConstUrl'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './AddBlog.scss'\r\n\r\nlet _ = require('lodash')\r\n\r\nconst AddBlog = props => {\r\n    const [title, setTitle] = useState('')\r\n    const [label, setLabel] = useState('')\r\n    const [desc, setDesc] = useState('')\r\n    const [kinds, setKinds] = useState('')\r\n    const [tags, setTags] = useState('')\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        const kindArr = kinds.split(\" \")\r\n        const tagsArr = tags.split(\" \")\r\n        const sendObj = {\r\n            title: title,\r\n            label: label,\r\n            desc: desc,\r\n            kinds: kindArr,\r\n            tags: tagsArr\r\n        }\r\n        props.postArticle(`${BLOGURL}/articles`, sendObj)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.articlesPOST != undefined) {\r\n            if (props.articlesPOST.error_code === undefined) {\r\n                alert(\"SUCCESS\")\r\n            }\r\n        }\r\n    }, [props.articlesPOST])\r\n\r\n    useEffect(() => {\r\n        return () => props.resetPost()\r\n\r\n    })\r\n\r\n    if (!_.isEmpty(props.articlesPOST) && props.articlesPOST.error_code === undefined) {\r\n        return (\r\n            <Redirect to={{\r\n                pathname: `${process.env.PUBLIC_URL}/dashboard/blog/all`\r\n            }} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className='AddBlog'>\r\n            {!_.isEmpty(props.articlesPOST) && props.articlesPOST.error_code != undefined && <p>{props.articlesPOST.message}</p>}\r\n            <form onSubmit={handleSubmit} className='AddBlog-Cont'>\r\n                <Input\r\n                    type='text'\r\n                    onChange={e => setTitle(e.target.value)}\r\n                    value={title}\r\n                    placeholder='Title' />\r\n                <Input\r\n                    type='text'\r\n                    onChange={e => setLabel(e.target.value)}\r\n                    value={label}\r\n                    placeholder='Label' />\r\n                <Input\r\n                    type='text'\r\n                    onChange={e => setDesc(e.target.value)}\r\n                    value={desc}\r\n                    placeholder='Description' />\r\n                <Input\r\n                    type='text'\r\n                    onChange={e => setKinds(e.target.value)}\r\n                    value={kinds}\r\n                    placeholder='Enter Kinds with SPACE' />\r\n                <Input\r\n                    type='text'\r\n                    value={tags}\r\n                    onChange={e => setTags(e.target.value)}\r\n                    placeholder='Enter Tags with SPACE' />\r\n                <Input\r\n                    type='submit'\r\n                    className='Submit' />\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isFetching: state.blogReducer.isFetching,\r\n        articlesPOST: state.blogReducer.postArticles,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        postArticle: (url, body) => dispatch(postArticles(url, body)),\r\n        resetPost: () => dispatch(resetPostArticles())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBlog)","import AddBlog from './AddBlog'\r\n\r\nexport default AddBlog","import Item from './Item'\r\n\r\nexport default Item","import React from 'react'\r\nimport messageItem from '../../../assets/Images/VectorMessage.svg'\r\nimport { Button } from '../../Form'\r\nimport { connect } from 'react-redux'\r\nimport { deleteBlog } from '../../../action/Action'\r\nimport { BLOGURL } from '../../../const/ConstUrl'\r\nimport './Item.scss'\r\n\r\nconst Item = props => {\r\n    return (\r\n        <div className='Blog-Item item'>\r\n            <div className=\"Blog-Item_img\">\r\n                {props.item.picture == null ?\r\n                    <img alt='' /> :\r\n                    <img src={props.item.picture} alt='' />\r\n                }\r\n            </div>\r\n            <div className=\"Blog-Item-Wrapper\">\r\n                <div className='Blog-Item-Wrapper-Kinds'>\r\n                    {Object.keys(props.item.kinds).map(item =>\r\n                        <p key={item} className=\"Blog-Item-Wrapper_type\">\r\n                            {item}\r\n                        </p>\r\n                    )}\r\n                </div>\r\n                <h1 className=\"Blog-Item-Wrapper_title\">{props.item.title}</h1>\r\n                <p className=\"Blog-Item-Wrapper_context\">{props.item.desc}</p>\r\n                <div className=\"Blog-Item-Wrapper_date\">\r\n                    <p>\r\n                        {props.item.created_at.slice(0, props.item.created_at.indexOf('T'))}\r\n                    </p>\r\n                    <div className=\"Blog-Item-Wrapper_date_message\">\r\n                        <img src={messageItem} />\r\n                        <p>4</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='Blog-Item-Button'>\r\n                <Button\r\n                    value='Delete'\r\n                    className='delete'\r\n                    onClick={() => props.deleteBlog(`${BLOGURL}/articles/${props.item._id}`)} />\r\n                <Button\r\n                    value='Edit'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteBlog: url => dispatch(deleteBlog(url))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Item)","import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react'\r\nimport { Button } from '../Form'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    getArticles,\r\n    getBlogKinds,\r\n    getBlogKindsCount,\r\n    deleteReset\r\n} from '../../action/Action'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { BLOGURL } from '../../const/ConstUrl'\r\nimport AddBlog from './AddBlog'\r\nimport { compose } from 'recompose'\r\nimport Item from './Item'\r\nimport './Blog.scss'\r\n\r\nlet _ = require('lodash')\r\n\r\nconst Blog = props => {\r\n\r\n    const [isAddBlog, setIsAddBlog] = useState(false)\r\n\r\n    useEffect(() => {\r\n        props.getArticles(`${BLOGURL}/articles`)\r\n        props.getKinds(`${BLOGURL}/article-kinds`)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.kinds != undefined) {\r\n            const kinds = []\r\n            for (let i = 0; i < props.kinds.length; i++) {\r\n                kinds.push(props.kinds[i].name)\r\n            }\r\n            const sendObj = JSON.stringify(kinds)\r\n            props.getKindsCount(`${BLOGURL}/article-kinds/counts?kinds=${sendObj}`)\r\n        }\r\n        if (props.deleteArticle != undefined || props.postArticle != undefined) {\r\n            props.getArticles(`${BLOGURL}/articles`)\r\n            setIsAddBlog(false)\r\n        }\r\n    }, [props.kinds, props.deleteArticle, props.postArticle])\r\n\r\n    useEffect(() => {\r\n        if (props.articles != undefined) {\r\n            props.resetDelete()\r\n        }\r\n    }, [props.articles])\r\n\r\n    const hanndleKinds = item => {\r\n        props.history.push(item)\r\n        if (item != 'all') {\r\n            const kinds = [item]\r\n            props.getArticles(`${BLOGURL}/articles/?kinds=${JSON.stringify(kinds)}`)\r\n        }\r\n        else {\r\n            props.getArticles(`${BLOGURL}/articles`)\r\n        }\r\n    }\r\n\r\n    if (_.isEmpty(props.articles) ||\r\n        _.isEmpty(props.kinds) ||\r\n        _.isEmpty(props.kindsCount) ||\r\n        props.isFetching) {\r\n        return (<div>Loading...</div>)\r\n    }\r\n\r\n    return (\r\n        <section className='Blog'>\r\n            <nav>\r\n                <h1>Blog</h1>\r\n                <Button\r\n                    value='Add Blog'\r\n                    className='addblog'\r\n                    onClick={() => setIsAddBlog(true)} />\r\n            </nav>\r\n            {isAddBlog && <AddBlog />}\r\n            <div className=\"Blog-Cont\">\r\n                <div className=\"Blog-Cont-Title\">\r\n                    <div className=\"Blog-Cont-Title_content\">\r\n                        <div\r\n                            className={window.location.href.includes('all') && 'isActiveBlog'}\r\n                            onClick={() => hanndleKinds('all')}>\r\n                            <p>({props.articles.articles.length})</p>\r\n                            <p>All Articles</p>\r\n                        </div>\r\n                        {props.kinds.map(item =>\r\n                            Object.keys(props.kindsCount).map(count =>\r\n                                item.name == count &&\r\n                                <div\r\n                                    onClick={() => hanndleKinds(item.name)}\r\n                                    key={item._id}\r\n                                    className={window.location.href.includes(item.name) && 'isActiveBlog'}>\r\n                                    <p>({props.kindsCount[count]})</p>\r\n                                    <p>{item.name}</p>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"Blog-Cont-Wrap\">\r\n                    {props.articles.articles.map(item =>\r\n                        <Item key={item._id} item={item} />\r\n                    )}\r\n                </div>\r\n                <button className='Blog-Cont-Button'>Load More articles</button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isFetching: state.blogReducer.isFetching,\r\n        articles: state.blogReducer.getArticles,\r\n        postArticle: state.blogReducer.postArticles,\r\n        kinds: state.blogReducer.getKinds,\r\n        kindsCount: state.blogReducer.getKindsCount,\r\n        deleteArticle: state.blogReducer.deleteBlog\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getArticles: (url, bool) => dispatch(getArticles(url, bool)),\r\n        getKinds: url => dispatch(getBlogKinds(url)),\r\n        getKindsCount: url => dispatch(getBlogKindsCount(url)),\r\n        resetDelete: () => dispatch(deleteReset)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(Blog)\r\n","import Blog from './Blog'\r\n\r\nexport default Blog","import Meal from './Meal'\r\n\r\nexport default Meal","import React from 'react'\r\nimport './Meal.scss'\r\n\r\nconst Meal = () => {\r\n\r\n    return (\r\n        <section className='Meal'>\r\n            Meal\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Meal","import Tabs from './Tabs'\r\n\r\nexport default Tabs","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { Help, AddHelp } from '../Help'\r\nimport Blog from '../Blog'\r\nimport Meal from '../Meal'\r\nimport './Tabs.scss'\r\n\r\nconst Tabs = () => {\r\n\r\n    return (\r\n        <section className='Tabs'>\r\n            <Route path={`${process.env.PUBLIC_URL}/dashboard/help/:id`} component={Help} />\r\n            <Route path={`${process.env.PUBLIC_URL}/dashboard/addhelp`} component={AddHelp} />\r\n            <Route path={`${process.env.PUBLIC_URL}/dashboard/blog/`} component={Blog} />\r\n            <Route path={`${process.env.PUBLIC_URL}/dashboard/meal`} component={Meal} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Tabs","import Dashboard from './Dashboard'\r\n\r\nexport default Dashboard","import React from 'react'\r\nimport Aside from '../Aside'\r\nimport Tabs from '../Tabs'\r\nimport './Dashboard.scss'\r\n\r\nconst Dashboard = () => {\r\n\r\n    return (\r\n        <section className='Dashboard'>\r\n            <div className='Dashboard-Cont'>\r\n                <Aside />\r\n                <Tabs />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { useEffect } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport SignIn from './components/SignIn'\r\nimport Dashboard from './components/Dashboard';\r\nimport { connect } from 'react-redux'\r\nimport { getCategoriesHelpCenter } from './action/Action';\r\nimport { HELPCENTERCATGURL } from './const/ConstUrl'\r\nimport './App.scss';\r\n\r\nlet _ = require('lodash')\r\n\r\nconst App = props => {\r\n\r\n  useEffect(() => {\r\n    if (_.isEmpty(props.help)) {\r\n      props.getCategoriesHelp(HELPCENTERCATGURL)\r\n    }\r\n  }, [])\r\n\r\n  if (_.isEmpty(props.help)) {\r\n    return (\r\n      <div>\r\n        Loading...\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path={`${process.env.PUBLIC_URL}/`} component={SignIn} exact />\r\n          <Route path={`${process.env.PUBLIC_URL}/dashboard`} component={Dashboard} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    help: state.helpReducer.getCategories\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCategoriesHelp: url => dispatch(getCategoriesHelpCenter(url))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n"],"sourceRoot":""}