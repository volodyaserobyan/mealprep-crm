{"version":3,"sources":["components/Form/Input/index.js","components/Form/Input/Input.js","components/SignIn/index.js","components/SignIn/SignIn.js","components/Aside/index.js","components/Aside/Aside.js","action/Action.js","const/ConstUrl.js","components/Help/HelpGeneral/index.js","components/Help/HelpGeneral/HelpGeneral.js","components/Help/Help.js","components/Help/AddHelp/AddHelp.js","components/Help/AddHelp/index.js","components/Blog/index.js","components/Blog/Blog.js","components/Meal/index.js","components/Meal/Meal.js","components/Tabs/index.js","components/Tabs/Tabs.js","components/Dashboard/index.js","components/Dashboard/Dashboard.js","App.js"],"names":["Input","props","type","name","placeholder","className","classNames","value","onChange","e","SignIn","connect","state","help","helpReducer","getCategories","useState","mail","setMails","password","setPassword","isSuccess","setIsSuccess","to","pathname","process","categories","_id","onSubmit","preventDefault","target","Aside","getCategoriesHelpCenter","url","dispatch","All","fetch","method","headers","then","response","json","catch","error","data","postCategoriesHelpCenter","body","JSON","stringify","postCategories","BASEPATH","HELPCENTERCATGURL","HelpGeneral","deleteQuestHelp","deleteQuestions","deleteQuestionsHelpCenter","postQuest","id","setId","edit","isEdit","title","setTitle","answer","setAnswer","item","questions","map","key","onClick","console","log","deleteQuest","sendObj","label","split","join","toLowerCase","answere","editQuest","query","require","helpGET","helpDELETECAT","deleteCategories","helpDELETEQUEST","getCategoriesHelp","deleteCategoriesHelp","deleteCategoriesHelpCenter","isAdd","setIsAdd","useEffect","activeClassName","match","params","_","AddHelp","helpPost","undefined","message","postCategoriesHelp","titleLabel","setTitleLabel","question","setQuestion","questionLabel","setQuestionLabel","location","isEmpty","Blog","Meal","Tabs","path","component","Help","Dashboard","exact"],"mappings":"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","file":"static/js/3.972a6bb9.chunk.js","sourcesContent":["import Input from \"./Input\";\r\n\r\nexport default Input","import React from 'react'\r\nimport './Input.scss'\r\nimport classNames from 'classnames'\r\n\r\nconst Input = props => {\r\n\r\n    return (\r\n        <input\r\n            type={props.type}\r\n            name={props.name}\r\n            placeholder={props.placeholder}\r\n            className={classNames('input', props.className)}\r\n            value={props.value}\r\n            onChange={e => props.onChange(e)} />\r\n    )\r\n}\r\n\r\nexport default Input","import SignIn from './SignIn'\r\n\r\nexport default SignIn","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Input } from '../Form'\r\nimport './SignIn.scss'\r\n\r\nconst SignIn = props => {\r\n    const [mail, setMails] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (password !== '' && mail !== '') {\r\n            setIsSuccess(true)\r\n        }\r\n    }\r\n\r\n    if (isSuccess) {\r\n        return (\r\n            <Redirect to={{\r\n                pathname: `${process.env.PUBLIC_URL}/dashboard/help/${props.help.categories[0]._id}`\r\n            }} />\r\n        )\r\n    }\r\n    return (\r\n        <section className=\"SignIn\">\r\n            <div className=\"SignIn-Cont\">\r\n                <h1>Sign In</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Input\r\n                        type='text'\r\n                        name='mail'\r\n                        placeholder='E-mail'\r\n                        value={mail}\r\n                        onChange={e => setMails(e.target.value)}\r\n                    />\r\n                    <Input\r\n                        type='password'\r\n                        name='password'\r\n                        placeholder='Password'\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    />\r\n                    <Input\r\n                        type='submit'\r\n                        className=\"Submit\"\r\n                        value='LOGIN'\r\n                    />\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        help: state.helpReducer.getCategories\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SignIn)","import Aside from './Aside'\r\n\r\nexport default Aside","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport './Aside.scss'\r\n\r\nconst Aside = props => {\r\n    return (\r\n        <section className='Aside'>\r\n            <div className='Aside-Cont'>\r\n                <ul>\r\n                    <NavLink to={{\r\n                        pathname: `${process.env.PUBLIC_URL}/dashboard/help/${props.help.categories[0]._id}`\r\n                    }}>\r\n                        <li>Help</li>\r\n                    </NavLink>\r\n                    <NavLink to={{\r\n                        pathname: `${process.env.PUBLIC_URL}/dashboard/blog`\r\n                    }}>\r\n                        <li>Blog</li>\r\n                    </NavLink>\r\n                    <NavLink to={{\r\n                        pathname: `${process.env.PUBLIC_URL}/dashboard/meal`\r\n                    }}>\r\n                        <li>Meal</li>\r\n                    </NavLink>\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        help: state.helpReducer.getCategories\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Aside)","import * as All from '../const/ConstTypes'\r\n\r\nexport const getCategoriesHelpCenter = url => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(getCategories => {\r\n                dispatch({\r\n                    type: All.GETCATEGORIESHELP,\r\n                    getCategories: getCategories\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const postCategoriesHelpCenter = (url, body) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }).then(response => response.json())\r\n            .then(postCategories => {\r\n                dispatch({\r\n                    type: All.POSTCATEGORIESHELP,\r\n                    postCategories: postCategories\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteCategoriesHelpCenter = url => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(deleteCategories => {\r\n                dispatch({\r\n                    type: All.DELETECATEGORIESHELP,\r\n                    deleteCategories: deleteCategories\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteQuestionsHelpCenter = url => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: All.FETCHHELP\r\n        });\r\n        return fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(deleteQuestions => {\r\n                dispatch({\r\n                    type: All.DELETEQUESTIONSHELP,\r\n                    deleteQuestions: deleteQuestions\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: All.ERRORHELP,\r\n                    data: error\r\n                })\r\n            })\r\n    }\r\n}","export const BASEPATH = 'https://andoghevian-chef-app.herokuapp.com'\r\n\r\nexport const USERSMEURL = `${BASEPATH}/users/me`\r\nexport const DELETEUSERURL = `${BASEPATH}/users/`\r\n\r\nexport const GETMEALSURL = `${BASEPATH}/meals`\r\n\r\nexport const VERIFYURL = `${BASEPATH}/users/local/auth/code/verify`\r\nexport const REFRESHVERIFYURL = `${BASEPATH}/users/local/auth/code/refresh`\r\n\r\nexport const SIGNUPLOCALURL = `${BASEPATH}/users/local/auth/signup`\r\nexport const LOGINLOCALURL = `${BASEPATH}/users/local/auth/login`\r\nexport const LOGINFBURL = `${BASEPATH}/users/facebook/auth/login`\r\nexport const LOGOUTLOCALURL = `${BASEPATH}/users/local/auth/logout`\r\n\r\nexport const FILTERSURL = `${BASEPATH}/filters`\r\n\r\nexport const TESTIMONIALSURL = `${BASEPATH}/testimonials`\r\nexport const POSTTESTIMONIALSURL = `${BASEPATH}/users/me/testimonials`\r\n\r\nexport const FORGETPASSWORDURL = `${BASEPATH}/users/local/password/forget`\r\nexport const CHANGEPASSWORDURL = `${BASEPATH}/users/local/password/change`\r\n\r\nexport const HELPCENTERCATGURL = `${BASEPATH}/help-center/categories`\r\n\r\nexport const ABOUTUSGETMEMBERSURL = `${BASEPATH}/about-us/team`","import HelpGeneral from './HelpGeneral'\r\n\r\nexport default HelpGeneral","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { HELPCENTERCATGURL } from '../../../const/ConstUrl'\r\nimport { deleteQuestionsHelpCenter, postCategoriesHelpCenter } from '../../../action/Action'\r\nimport { Input } from '../../Form'\r\nimport './HelpGeneral.scss'\r\n\r\nconst HelpGeneral = props => {\r\n\r\n    const [id, setId] = useState('')\r\n    const [edit, isEdit] = useState(false)\r\n    const [title, setTitle] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n\r\n    const handleClick = e => {\r\n        console.log(e, 'sss')\r\n        setId(e._id)\r\n    }\r\n\r\n    const deleteQuest = id => {\r\n        props.deleteQuestHelp(`${HELPCENTERCATGURL}/questions/${id}`)\r\n    }\r\n\r\n    const editQuest = (id, e) => {\r\n        e.preventDefault()\r\n\r\n        const sendObj = {\r\n            title: title,\r\n            label: title.split(' ').join('_').toLowerCase(),\r\n            answere: answer\r\n        }\r\n\r\n        props.postQuest(`${HELPCENTERCATGURL}/questions/${id}`, sendObj)\r\n\r\n    }\r\n\r\n    return (\r\n        <section className='HelpGeneral'>\r\n            {props.item.questions.map(item =>\r\n                <div key={item._id}>\r\n                    <div>\r\n                        <h1 onClick={() => handleClick(item)}>\r\n                            {item.title}\r\n                        </h1>\r\n                        <button onClick={() => deleteQuest(item._id)}>Delete</button>\r\n                        <button onClick={() => isEdit(!edit)}>Edit</button>\r\n                        {edit &&\r\n                            <form onSubmit={(e) => editQuest(item._id, e)}>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='question'\r\n                                    placeholder='Question'\r\n                                    value={title}\r\n                                    onChange={e => setTitle(e.target.value)}\r\n                                />\r\n                                <Input\r\n                                    type='text'\r\n                                    name='answere'\r\n                                    placeholder='Answere'\r\n                                    value={answer}\r\n                                    onChange={e => setAnswer(e.target.value)}\r\n                                />\r\n                                <Input\r\n                                    type='submit'\r\n                                    className=\"Submit\"\r\n                                    value='SAVE'\r\n                                />\r\n                            </form>}\r\n                    </div>\r\n                    {item._id == id &&\r\n                        <p>{item.answere}</p>\r\n                    }\r\n                </div>\r\n            )}\r\n            <Link to={{\r\n                pathname: `${process.env.PUBLIC_URL}/dashboard/addhelp`,\r\n                query: props.id\r\n            }}\r\n            >\r\n                <button>Add Question</button>\r\n            </Link>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteQuestHelp: url => dispatch(deleteQuestionsHelpCenter(url)),\r\n        postQuest: (url, body) => dispatch(postCategoriesHelpCenter(url, body))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(HelpGeneral)","import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react'\r\nimport {\r\n    NavLink,\r\n    Redirect\r\n} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    getCategoriesHelpCenter,\r\n    deleteCategoriesHelpCenter\r\n} from '../../action/Action'\r\nimport { HELPCENTERCATGURL } from '../../const/ConstUrl'\r\nimport HelpGeneral from './HelpGeneral'\r\nimport './Help.scss'\r\n\r\nlet _ = require('lodash')\r\n\r\nconst Help = props => {\r\n\r\n    const [isAdd, setIsAdd] = useState(false)\r\n\r\n    // useEffect(() => {\r\n    //     props.getCategoriesHelp(HELPCENTERCATGURL)\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        props.getCategoriesHelp(HELPCENTERCATGURL)\r\n    }, [props.helpDELETECAT, props.helpDELETEQUEST])\r\n\r\n    if (isAdd) {\r\n        return (\r\n            <Redirect to={{\r\n                pathname: `${process.env.PUBLIC_URL}/dashboard/addhelp`\r\n            }} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className=\"Help\">\r\n            <div className=\"Help-Cont innerWrap\">\r\n                <h1 className=\"Help-Cont-Title\">Help Center</h1>\r\n                <div className=\"Help-Cont-Wrap\">\r\n                    <div className=\"Help-Cont-Wrap-Menu\">\r\n                        {props.helpGET.categories.map(item =>\r\n                            <div key={item._id}>\r\n                                <NavLink to={{\r\n                                    pathname: `${process.env.PUBLIC_URL}/dashboard/help/${item._id}`,\r\n                                }}\r\n                                    activeClassName='isActive'>\r\n                                    <p>{item.title}</p>\r\n                                </NavLink>\r\n                                <button onClick={() => {\r\n                                    props.deleteCategoriesHelp(`${HELPCENTERCATGURL}/${item._id}`)\r\n                                }}>Delete</button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"Help-Cont-Wrap-Context\">\r\n                        {props.helpGET.categories.map(item =>\r\n                            props.match.params.id == item._id && <HelpGeneral key={item._id}\r\n                                 item={item}\r\n                                 id={props.match.params.id} />)}\r\n                    </div>\r\n                </div>\r\n                <button onClick={() => setIsAdd(true)}>Add Help</button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        helpGET: state.helpReducer.getCategories,\r\n        helpDELETECAT: state.helpReducer.deleteCategories,\r\n        helpDELETEQUEST: state.helpReducer.deleteQuestions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCategoriesHelp: url => dispatch(getCategoriesHelpCenter(url)),\r\n        deleteCategoriesHelp: url => dispatch(deleteCategoriesHelpCenter(url))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Help)","import React, {\r\n    useState,\r\n    useEffect\r\n} from 'react'\r\nimport { Input } from '../../Form'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { postCategoriesHelpCenter } from '../../../action/Action'\r\nimport { HELPCENTERCATGURL } from '../../../const/ConstUrl'\r\nimport './AddHelp.scss'\r\n\r\nlet _ = require('lodash')\r\n\r\nconst AddHelp = props => {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [titleLabel, setTitleLabel] = useState('')\r\n    const [question, setQuestion] = useState('')\r\n    const [questionLabel, setQuestionLabel] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n    const [id, setId] = useState(props.location.query)\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n\r\n    const getTitle = () => {\r\n        props.helpGET.categories.map(item => {\r\n            if (props.location.query == item._id) {\r\n                setTitle(item.title)\r\n                setTitleLabel(item.title.split(' ').join('_').toLowerCase())\r\n                // return item.title\r\n            }\r\n        })\r\n    }\r\n    title == '' && getTitle()\r\n\r\n    const handelSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (id == undefined) {\r\n            const sendObj = {\r\n                title: title,\r\n                label: titleLabel,\r\n                questions: [\r\n                    {\r\n                        title: question,\r\n                        label: questionLabel,\r\n                        answere: answer\r\n                    }\r\n                ]\r\n            }\r\n            props.postCategoriesHelp(HELPCENTERCATGURL, sendObj)\r\n        }\r\n        else {\r\n            const sendObj = {\r\n                title: question,\r\n                answere: answer,\r\n                label: questionLabel\r\n            }\r\n            props.postCategoriesHelp(`${HELPCENTERCATGURL}/${id}/questions`, sendObj)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.helpPost === 'help categorie created' && _.isEmpty(props.helpGET)) {\r\n            setIsSuccess(true)\r\n        }\r\n    }, [props.helpPost])\r\n\r\n    console.log(props)\r\n\r\n    if (isSuccess) {\r\n        return (\r\n            <Redirect to={{\r\n                pathname: `${process.env.PUBLIC_URL}/dashboard/help/${props.help.categories[0]._id}`\r\n            }} />\r\n        )\r\n    }\r\n\r\n    console.log(title, 'sss')\r\n\r\n    return (\r\n        <section className='AddHelp'>\r\n            <form onSubmit={handelSubmit}>\r\n                <Input\r\n                    type='text'\r\n                    name='title'\r\n                    placeholder='Title'\r\n                    value={title}\r\n                    onChange={e => {\r\n                        setTitle(e.target.value)\r\n                        let label = e.target.value.split(' ').join('_')\r\n                        setTitleLabel(label.toLowerCase())\r\n                    }} />\r\n                <Input\r\n                    type='text'\r\n                    name='title'\r\n                    placeholder='Title-label'\r\n                    value={titleLabel}\r\n                    onChange={e => setTitleLabel(e.target.value.split(' ').join('_').toLowerCase())} />\r\n                <Input\r\n                    type='text'\r\n                    name='question'\r\n                    placeholder='Question'\r\n                    value={question}\r\n                    onChange={e => {\r\n                        setQuestion(e.target.value)\r\n                        let label = e.target.value.split(' ').join('_')\r\n                        setQuestionLabel(label.toLowerCase())\r\n                    }} />\r\n                <Input\r\n                    type='text'\r\n                    name='title'\r\n                    placeholder='Question-label'\r\n                    value={questionLabel}\r\n                    onChange={e => setQuestionLabel(e.target.value.split(' ').join('_').toLowerCase())} />\r\n                <Input\r\n                    type='text'\r\n                    name='answer'\r\n                    placeholder='Answeer'\r\n                    value={answer}\r\n                    onChange={e => setAnswer(e.target.value)} />\r\n                <Input\r\n                    type='submit'\r\n                    className=\"Submit\"\r\n                    value='ADD'\r\n                />\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        helpGET: state.helpReducer.getCategories,\r\n        helpPost: state.helpReducer.postCategories != undefined &&\r\n            state.helpReducer.postCategories.message\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        postCategoriesHelp: (url, body) => dispatch(postCategoriesHelpCenter(url, body))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddHelp)","import AddHelp from \"./AddHelp\";\r\n\r\nexport default AddHelp","import Blog from './Blog'\r\n\r\nexport default Blog","import React from 'react'\r\nimport './Blog.scss'\r\n\r\nconst Blog = () => {\r\n\r\n    return (\r\n        <section className='Blog'>\r\n            Blog\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Blog","import Meal from './Meal'\r\n\r\nexport default Meal","import React from 'react'\r\nimport './Meal.scss'\r\n\r\nconst Meal = () => {\r\n\r\n    return (\r\n        <section className='Meal'>\r\n            Meal\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Meal","import Tabs from './Tabs'\r\n\r\nexport default Tabs","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { Help, AddHelp } from '../Help'\r\nimport Blog from '../Blog'\r\nimport Meal from '../Meal'\r\nimport './Tabs.scss'\r\n\r\nconst Tabs = () => {\r\n\r\n    return (\r\n        <section className='Tabs'>\r\n            <Route path={`${process.env.PUBLIC_URL}/dashboard/help/:id`} component={Help} />\r\n            <Route path={`${process.env.PUBLIC_URL}/dashboard/addhelp`} component={AddHelp} />\r\n            <Route path={`${process.env.PUBLIC_URL}/dashboard/blog`} component={Blog} />\r\n            <Route path={`${process.env.PUBLIC_URL}/dashboard/meal`} component={Meal} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Tabs","import Dashboard from './Dashboard'\r\n\r\nexport default Dashboard","import React from 'react'\r\nimport Aside from '../Aside'\r\nimport Tabs from '../Tabs'\r\nimport './Dashboard.scss'\r\n\r\nconst Dashboard = () => {\r\n\r\n    return (\r\n        <section className='Dashboard'>\r\n            <div className='Dashboard-Cont'>\r\n                <Aside />\r\n                <Tabs />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport SignIn from './components/SignIn'\nimport Dashboard from './components/Dashboard';\nimport { connect } from 'react-redux'\nimport { getCategoriesHelpCenter } from './action/Action';\nimport { HELPCENTERCATGURL } from './const/ConstUrl'\nimport './App.scss';\n\nlet _ = require('lodash')\n\nconst App = props => {\n\n  useEffect(() => {\n    if (_.isEmpty(props.help)) {\n      props.getCategoriesHelp(HELPCENTERCATGURL)\n    }\n  }, [])\n\n  if (_.isEmpty(props.help)) {\n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path={`${process.env.PUBLIC_URL}/`} component={SignIn} exact />\n          <Route path={`${process.env.PUBLIC_URL}/dashboard`} component={Dashboard} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    help: state.helpReducer.getCategories\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCategoriesHelp: url => dispatch(getCategoriesHelpCenter(url))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n"],"sourceRoot":""}